services:
  # Laravel 應用程式
  app:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: expense_tracker_app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    environment:
      - APP_ENV=${APP_ENV}
      - APP_DEBUG=${APP_DEBUG}
      - DB_HOST=${DB_HOST}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    depends_on:
      - mysql
      - redis
    networks:
      - expense_tracker_network

  # MySQL 資料庫
  mysql:
    image: mysql:8.0
    container_name: expense_tracker_mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - expense_tracker_network

  # Redis 快取
  redis:
    image: redis:7-alpine
    container_name: expense_tracker_redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - expense_tracker_network

  # Nginx 網頁伺服器
  nginx:
    image: nginx:alpine
    container_name: expense_tracker_nginx
    restart: unless-stopped
    ports:
      - "${NGINX_HTTP_PORT}:80"
      - "${NGINX_HTTPS_PORT}:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    depends_on:
      - app
    networks:
      - expense_tracker_network

  # Certbot (Let's Encrypt)
  certbot:
    image: certbot/certbot
    container_name: expense_tracker_certbot
    restart: unless-stopped
    volumes:
      - certbot_certs:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${CERTBOT_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN} -d www.${DOMAIN}
    depends_on:
      - nginx
    networks:
      - expense_tracker_network

  # Laravel Queue Worker
  queue:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: expense_tracker_queue
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    depends_on:
      - mysql
      - redis
    networks:
      - expense_tracker_network

  # Laravel Scheduler (Cron)
  scheduler:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: expense_tracker_scheduler
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - ./docker/cron/crontab:/etc/cron.d/laravel-scheduler
    command: cron -f
    depends_on:
      - mysql
      - redis
    networks:
      - expense_tracker_network

# 網路設定
networks:
  expense_tracker_network:
    driver: bridge

# Volume 設定
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  certbot_certs:
    driver: local
  certbot_www:
    driver: local